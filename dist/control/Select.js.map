{"version":3,"sources":["../../src/control/Select.js"],"names":["sap","ui","define","Control","extend","metadata","properties","selectedKey","type","aggregations","items","multiple","events","change","value","defaultAggregation","getSelectedItem","getItems","item","getKey","getSelectedKey","onAfterRendering","$","dropdown","onChange","setProperty","fireEvent","renderer","oRm","oC","selectedItem","getText","forEach","i"],"mappings":";;AAAAA,IAAIC,EAAJ,CAAOC,MAAP,CAAc,CACV,qBADU,CAAd,EAEG,UAAUC,OAAV,EAAmB;;AAElB,WAAOA,QAAQC,MAAR,CAAe,wBAAf,EAAyC;AAC5CC,kBAAU;AACNC,wBAAY;AACRC,6BAAa;AACTC,0BAAM;AADG;AADL,aADN;AAMNC,0BAAc;AACVC,uBAAO,EAAEF,MAAM,kBAAR,EAA4BG,UAAU,IAAtC;AADG,aANR;AASNC,oBAAQ;AACJC,wBAAQ,EAAEC,OAAO,EAAEN,MAAM,QAAR,EAAT;AADJ,aATF;AAYNO,gCAAoB;AAZd,SADkC;;AAgB5CC,yBAAiB,2BAAW;AACxB,gBAAIN,QAAQ,KAAKO,QAAL,MAAmB,EAA/B;AADwB;AAAA;AAAA;;AAAA;AAExB,qCAAiBP,KAAjB,8HAAwB;AAAA,wBAAfQ,IAAe;;AACpB,wBAAIA,KAAKC,MAAL,OAAkB,KAAKC,cAAL,EAAtB,EAA6C;AACzC,+BAAOF,IAAP;AACH;AACJ;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOxB,mBAAO,IAAP;AACH,SAxB2C;;AA0B5CG,0BAAkB,4BAAY;AAAA;;AAC1B,iBAAKC,CAAL,GAASC,QAAT,CAAkB;AACdC,0BAAU,yBAAS;AACf,0BAAKC,WAAL,CAAiB,aAAjB,EAAgCX,KAAhC,EAAuC,IAAvC;AACA,0BAAKY,SAAL,CAAe,QAAf,EAAyB,EAACZ,OAAOA,KAAR,EAAzB;AACH;AAJa,aAAlB;AAMH,SAjC2C;;AAmC5Ca,kBAAU,kBAAUC,GAAV,EAAeC,EAAf,EAAmB;AACzB,gBAAIC,eAAeD,GAAGb,eAAH,EAAnB;AACA;AAAA;AAAA,qCACyBa,EADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAG6BC,eAAeA,aAAaC,OAAb,EAAf,GAAwC,EAHrE;AAAA;AAAA;AAAA,2CAIoB,QAJpB;AAAA,mDAIoCF,GAAGT,cAAH,MAAuB,EAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAOY,CAACS,GAAGZ,QAAH,MAAiB,EAAlB,EAAsBe,OAAtB,CAA8B;AAAA;AAAA;AAAA;AAAA,gEACIC,EAAEd,MAAF,EADJ;AAAA;AAAA;AAAA,0CACkBc,EAAEF,OAAF,EADlB;AAAA;AAAA;AAAA,iBAA9B,CAPZ;AAAA;AAAA;AAAA;AAcH;AAnD2C,KAAzC,CAAP;AAsDH,CA1DD","file":"Select.js","sourcesContent":["sap.ui.define([\n    \"sap/ui/core/Control\"\n], function (Control) {\n\n    return Control.extend(\"gallery.control.Select\", {\n        metadata: {\n            properties: {\n                selectedKey: {\n                    type: \"string\"\n                }\n            },\n            aggregations: {\n                items: { type: \"sap.ui.core.Item\", multiple: true }\n            },\n            events: {\n                change: { value: { type: \"string\" } }\n            },\n            defaultAggregation: \"items\"\n        },\n\n        getSelectedItem: function() {\n            let items = this.getItems() || [];\n            for (let item of items) {\n                if (item.getKey() === this.getSelectedKey()) {\n                    return item;\n                }\n            }\n            return null;\n        },\n\n        onAfterRendering: function () {\n            this.$().dropdown({\n                onChange: value => {\n                    this.setProperty(\"selectedKey\", value, true);\n                    this.fireEvent(\"change\", {value: value});\n                }\n            });\n        },\n\n        renderer: function (oRm, oC) {\n            let selectedItem = oC.getSelectedItem();\n            oRm.render(\n                <div ui5ControlData={oC} class=\"ui floating dropdown labeled icon button basic\">\n                    <i class=\"world icon\"></i>\n                    <span class=\"text\">{ selectedItem ? selectedItem.getText() : \"\" }</span>\n                    <input type=\"hidden\" value={oC.getSelectedKey() || \"\"} />\n                    <div class=\"menu \">\n                    {\n                        (oC.getItems() || []).forEach(i => (\n                            <div class=\"item\" data-value={i.getKey()}>{ i.getText() }</div>\n                        ))\n                    }\n                    </div>\n                </div>\n            );\n        }\n    });\n\n});\n"]}